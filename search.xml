<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>markdown学习笔记</title>
    <url>/2021/05/08/markdown/</url>
    <content><![CDATA[<h1 id="Markdown学习笔记"><a href="#Markdown学习笔记" class="headerlink" title="Markdown学习笔记"></a><center>Markdown学习笔记</center></h1><h2 id="一-markdown的简要介绍"><a href="#一-markdown的简要介绍" class="headerlink" title="一. markdown的简要介绍"></a>一. markdown的简要介绍</h2><p>
&emsp;&emsp;根据<a href="http://markdown.p2hp.com/getting-started/">
Markdown中文网 </a>的描述：Markdown是一种轻量级的标记语言，
可用于将格式设置元素添加到纯文本文档中。 
Markdown由John Gruber于2004年创建，如今已成为世界上最受欢迎的标记语言之一。<br>  
&emsp;&emsp;本学期软件构造课和计算机系统课都有大量的实验任务, 
在完成实验后，写一写博客,留下一些记录，既能够帮助自己整理所学所感，
也能给后来者提供一些微不足道的教程和帮助。<br>
&emsp;&emsp;这是我第一次认真尝试写一篇博客，才疏学浅，希望能够起到抛砖引玉的作用。
此外，本文中由于hexo配置与markdown本身语法以及使用编辑器的种种桎梏，有些本应有效
的markdown语法在实际呈现到blog的时候出现了与预期不符的问题，<mark>所以为了解决这些
问题，我被迫使用了一些html语言</mark>，但是实际上我并没有系统学习过markdown或者是html，
所以很有可能写的不规范或者不具有可扩展性和可移植性。<br>
&emsp;&emsp;同时为了排版方便以及演示代码的展现，大部分博客文字内容都呈现在代码块。<br>
&emsp;&emsp;下面正式进入正文部分：
</p>

<h2 id="二-markdown语法之标题"><a href="#二-markdown语法之标题" class="headerlink" title="二. markdown语法之标题"></a>二. markdown语法之标题</h2><p>
&emsp;&emsp;依据<a href="http://markdown.p2hp.com/basic-syntax/">
官方文档 </a>，markdown一共支持从大到小共六级标题，其具体使用语法如下所示：<br>
</p>

<pre><code>    在markdown中可以使用&quot;k个#+空格+HeaderName&quot;就可以生成一个k级标题，
k为1到6的整数。
    注意，使用这种方式创建标题时必须与上面的段落之间空一行
    而在html中可以使用&lt;hk&gt;HeaderName&lt;/hk&gt;的方法生成相应级别的标题。
    标题的字体大小与级数有关，1级标题的字体最大，6级标题的字体最小。
    此外，还有一种生成1、2级标题的替代格式，此处不再赘述。
    为了不破坏本博客的标题结构，此处就不做演示了。
</code></pre>
<h2> 三. markdown语法之文字处理</h2>

<h4 id="1-换行"><a href="#1-换行" class="headerlink" title="1. 换行"></a>1. 换行</h4><pre><code>    在markdown中可以使用两个空格加enter键换行,但不知是hexo的配置原因
还是我用IDEA/Typro编写md文件的时候直接按enter就会自动换行，这样其实还
挺麻烦的，因为没有办法在一段较长的时候分割开段落，因为一按回车就会自动强
行换行。这也是为什么我要在代码里引入html的原因。
    在html中，换行只需要在上一行尾部加上&lt;\br&gt;即可。
    如果不显示地用上述方法换行的话，直接按enter并不会在显示的时候换行，
只是可以在编写的时候重新提行写，这样更人性化。
    下面使用&quot;&amp;emsp;&amp;emsp;&amp;emsp;这是第一行&lt;br&gt;&amp;emsp;&amp;emsp;&amp;emsp;
这是第二行&quot;来演示效果：
</code></pre>
<p>&emsp;&emsp;&emsp;这是第一行<br>&emsp;&emsp;&emsp;这是第二行</p>
<h3 id="2-粗体和斜体"><a href="#2-粗体和斜体" class="headerlink" title="2. 粗体和斜体"></a>2. 粗体和斜体</h3><pre><code>    (1)
        在markdown中对某个字或者某段词句加粗的语法为：**想要加粗的文字**
    或者在html中用&lt;strong&gt;想要加粗的文字&lt;/strong&gt;的方式加粗。
    (2)
        在markdown中对某个字或者某段词句设为斜体的语法为：*想要倾斜的文字*
    或者在html中用&lt;em&gt;想要加粗的文字&lt;/em&gt;的方式加粗。
    (3)
        如果既想要加粗又想要斜体，可以这样写：***想要加粗并倾斜的文字***
    或者在html中用&lt;strong&gt;&lt;em&gt;想要加粗的文字&lt;/em&gt;&lt;/strong&gt;。
    
        下面使用&quot;&lt;strong&gt;&lt;em&gt;markdown使用笔记&lt;/em&gt;&lt;/strong&gt;&quot;来演示效果：
</code></pre>
<p>&emsp;&emsp;&emsp;<strong><em>markdown使用笔记</em></strong></p>
<h3 id="3-居中"><a href="#3-居中" class="headerlink" title="3. 居中"></a>3. 居中</h3><pre><code>    我不清楚markdown是否提供了将文字居中的语法，所以我学习了如何使用html
来将文字居中，其具体语法为：&lt;center&gt;想要居中的文字&lt;/center&gt;
    下面使用&quot;&lt;center&gt;我在中间&lt;/center&gt;&quot;来演示效果：
</code></pre>
<p>&emsp;&emsp;&emsp;<center>我在中间</center></p>
<h3 id="4-上脚标和下脚标"><a href="#4-上脚标和下脚标" class="headerlink" title="4. 上脚标和下脚标"></a>4. 上脚标和下脚标</h3><pre><code>    在typro中偏好设置里可以选择引入markdown扩展语法中的脚标：
    ^上脚标^和~下脚标~
    但是我使用了上述方式成功在编辑器里测试了上下脚标功能后运用
到博客并部署到hexo中时却发现实际显示的结果与本机上测试有所不同。
所以，被逼无奈，又只好寻求html这个法宝了：
    在html中，添加上下脚标的语法为：
    &lt;sup&gt;上角标&lt;/sup&gt;和&lt;sub&gt;下脚标&lt;/sub&gt;
    不过有一个待解决的问题是如何打出双脚标，个人推可能需要Latex
插件的支持用公式编辑的方法打出来吧。
    下面使用&quot;H&lt;sub&gt;2&lt;/sub&gt;O&quot;和2&quot;&lt;sup&gt;10&lt;/sup&gt;=1024&quot;来演示效果：
</code></pre>
<p>&emsp;&emsp;&emsp;H<sub>2</sub>O &emsp; 2<sup>10</sup>=1024<br></p>
<h3 id="5-高亮"><a href="#5-高亮" class="headerlink" title="5. 高亮"></a>5. 高亮</h3><pre><code>    在typro中偏好设置里可以选择引入markdown扩展语法中的高亮：
    ==想要高亮的文字==
    但是我使用了上述方式成功在编辑器里测试了上下脚标功能后运用
到博客并部署到hexo中时却发现实际显示的结果与本机上测试有所不同。
所以，被逼无奈，又只好寻求html这个法宝了：
    在html中，添加上下脚标的语法为：&lt;mark&gt;想要高亮的语句&lt;/mark&gt;
    下面使用&quot;&lt;mark&gt;注意了注意了&lt;/mark&gt;&quot;来演示效果：
</code></pre>
<p>&emsp;&emsp;&emsp;<mark>注意了注意了</mark></p>
<h3 id="6-下划线和删除线"><a href="#6-下划线和删除线" class="headerlink" title="6. 下划线和删除线"></a>6. 下划线和删除线</h3><pre><code>    markdown语法中，删除线的实现方法为:~~想要画上删除线的内容~~ ；
    下划线的实现方法未知，html中可以这样写：&lt;u&gt;想要画上下划线的内容&lt;/u&gt;
    下面使用&quot;~~请无视这句话~~&quot;以及&quot;&lt;u&gt;划重点啦&lt;/u&gt;&quot;来演示效果：
</code></pre>
<p>&emsp;&emsp;&emsp;<del>请无视这句话</del> &emsp; <u>划重点啦</u></p>
<h3 id="6-空格"><a href="#6-空格" class="headerlink" title="6. 空格"></a>6. 空格</h3><pre><code>    一种打空格的方式是直接按space键或者tab键，但是为了更好地控制空白
的大小，可以使用html当中的空格：
    可以用&quot;&amp;nbsp;&quot;或者&quot;&amp;ensp;&quot;或者&quot;&amp;emsp&quot;等不同定义的空格来实现想
要的空白宽度，具体可以参照这篇博客：html空格的五种表示(https://www.
cnblogs.com/SimonHu1993/p/9257176.html)。
    下面使用&quot;|&amp;nbsp|---------|&amp;ensp|---------|&amp;emsp;|&quot;来演示这
三种空格的大小：
</code></pre>
<p>&emsp;&emsp;&emsp;|&nbsp;|———|&ensp;|———|&emsp;|</p>
<h2 id="四-markdown语法之链接与引用"><a href="#四-markdown语法之链接与引用" class="headerlink" title="四. markdown语法之链接与引用"></a>四. markdown语法之链接与引用</h2><h4 id="1-自动链接"><a href="#1-自动链接" class="headerlink" title="1. 自动链接"></a>1. 自动链接</h4><pre><code>    自动链接就是将地址原封不动的显示出来，同时它也将生成该地址的超链接，
它常用于邮箱地址和较短网址的显示。语法是在该链接地址前后加上一对&lt; &gt;，常
用于显示邮箱或者网址等等。
    比如，使用代码&quot;&lt;https://github.com/&gt;&quot;可以生成如下的自动链接：
</code></pre>
<p>&emsp;&emsp;&emsp;<a href="https://github.com/">https://github.com/</a></p>
<h4 id="2-文本链接"><a href="#2-文本链接" class="headerlink" title="2. 文本链接"></a>2. 文本链接</h4><pre><code>    markdown支持行内式(inline)和参考式(reference)两种形式的超文本链
接语法格式。不管是哪一种，链接文字都是用方括号&quot;[]&quot;来标记。
    首先是行内式，其markdown语法为&quot;[txt](url)&quot;，对应html语法为&lt;a hr
ef=&quot;url&quot;&gt;text&lt;/a&gt;。如果你还想要加上链接的title，只要在网址后面用双引
号把title文字包起来即可。
    然后是参考式，其用途主要是可以先声明超链接但是并不给出其定义，而是在
md文件的任何其他位置(一般是末尾)加以定义。其markdown语法为：先定义参考
refid：[text][refid]，再定义参考refid所指向的具体地址[refid]:url。
注意，这里有一些简写和细节问题，详情可以参考下述用于演示参考式的链接里的
博客。
    以下我们用html语法&lt;a href=&quot;https://starlooo.github.io/&quot;&gt;我的
博客主页&lt;/a&gt;来演示行内式文编链接；然后用markdown语法[一篇关于链接的参
考博客][ref_blog_1]和[ref_blog_1]:https://blog.csdn.net/baox
iao7872/article/details/90240402来演示参考式文本链接：
</code></pre>
<p>&emsp;&emsp;&emsp;<a href="https://starlooo.github.io/">我的博客主页</a><br><br>&emsp;&emsp;&emsp;<a href="https://blog.csdn.net/baoxiao7872/article/details/90240402">一篇关于链接的参考博客</a></p>
<h4 id="3-图片链接"><a href="#3-图片链接" class="headerlink" title="3. 图片链接"></a>3. 图片链接</h4><pre><code>    markdown使用与文本链接几乎相同的方式来实现图片链接，同样支持行内式
和参考式两种形式，只是需要在方括号前加上一个&quot;!&quot;。
    以行内式为例，图片链接的markdown语法为：![alt_txt](url)，对应ht
ml写法为&lt;img src=&quot;url&quot; alt=&quot;text&quot;&gt;，其中文本部分可选，如果没有需要可
以不写。
    但这里有个问题，我目前虽然可以把本地的图片链接入markdown，但当写博
客部署到云端后却发现图片无法加载。目前的解决方法是使用图床，将自己本地的
图片上传到网上，然后生成链接来引用。下面提供的链接的知乎回答里有关于一些
图床的介绍，读者可以自行选用。
    以下我们分别用markdown语法：[illustration_1](https://z3.ax1x
.com/2021/05/08/gGdtld.jpg)]和html语法&lt;img src=&quot;https://z3.ax1
x.com/2021/05/09/gYI9n1.jpg&quot; alt=&quot;gYI9n1.jpg&quot; border=&quot;0&quot; /&gt;来
演示图片链接：
</code></pre>
<p><img src="https://z3.ax1x.com/2021/05/08/gGdtld.jpg" alt="illustration_1"><br><img src="https://z3.ax1x.com/2021/05/09/gYI9n1.jpg" alt="illustrtion_2"></p>
<h4 id="4-块引用"><a href="#4-块引用" class="headerlink" title="4. 块引用"></a>4. 块引用</h4><pre><code>    markdown可以创建块引用，具体方法是在段落前添加一个&quot;&gt;&quot;，如果需要对
多个段落添加块引用需要在空行前也加上&quot;&gt;&quot;。
    同时，块引用可以嵌套使用，可以在一级块引用内使用&quot;&gt;&gt;&quot;创建二级块引用。
另一方面块引用的内部也可以使用markdown的其他语法元素，具体可以自行尝试。
    以下我们用&gt;**块引用段落1**&lt;br&gt;和&gt;*块引用段落2*&lt;br&gt;以及&gt;&gt;&lt;mark&gt;
嵌套块引用&lt;mark&gt;引用来演示块引用：
</code></pre>
<blockquote>
<p><strong>块引用段落1</strong><br><br><em>块引用段落2</em><br></p>
<blockquote>
<p><mark>嵌套块引用<mark></p>
</blockquote>
</blockquote>
<ol>
<li>测试有序列表，1</li>
<li>测试有序列表，2</li>
<li>测试列表当中的缩进<ol>
<li>第一层缩进，1</li>
<li>第三层缩进，2<ol>
<li>第二层缩进</li>
</ol>
</li>
</ol>
</li>
</ol>
<ul>
<li><p>测试无序列表，1</p>
<p>​        这是一段文字</p>
</li>
<li><p>测试无序列表，2</p>
<ul>
<li>测试无序列表缩进</li>
</ul>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, markdown!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试打开图片</p>
<p><a href="https://imgtu.com/i/gGdtld"><img src="https://z3.ax1x.com/2021/05/08/gGdtld.jpg" alt="gGdtld.jpg"></a></p>
<p><mark>这张风景图真好康</mark></p>
<p>测试超连接<a href="https://github.com/StarLooo">我的github</a></p>
]]></content>
      <categories>
        <category>我的笔记</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>markdown</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
</search>
